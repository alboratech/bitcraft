name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  bitcraft_test:
    name: 'Bitcraft Test (Elixir ${{ matrix.elixir }} OTP ${{ matrix.otp }})'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - elixir: 1.13.x
            otp: 24.x
            coverage: true
            sobelow: true
            dialyzer: true
          - elixir: 1.11.x
            otp: 23.x
          - elixir: 1.10.x
            otp: 22.x
          - elixir: 1.9.x
            otp: 22.x

    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v3

      - name: Install OTP and Elixir
        uses: actions/setup-elixir@v1.5.0
        with:
          otp-version: '${{ matrix.otp }}'
          elixir-version: '${{ matrix.elixir }}'
          experimental-otp: true

      - name: Cache deps
        uses: actions/cache@v3
        id: mix-cache
        with:
          path: deps
          key: >-
            ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{
            hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-

      - name: Cache _build
        uses: actions/cache@v3
        with:
          path: _build
          key: >-
            ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-build-${{
            hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-build-

      - name: Install Dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
        if: ${{ steps.mix-cache.outputs.cache-hit != 'true' }}

      - name: Run style and code consistency checks
        run: |
          mix compile --warnings-as-errors
          mix format --check-formatted
          mix credo --strict

      - name: Run tests
        run: |
          epmd -daemon
          mix test --trace
        if: ${{ !matrix.coverage }}

      - name: Run tests with coverage
        run: mix coveralls.github
        if: ${{ matrix.coverage }}

      - name: Run sobelow
        run: mix sobelow --exit --skip
        if: ${{ matrix.sobelow }}

      - name: Retrieve PLT Cache
        uses: actions/cache@v3
        id: plt-cache
        with:
          path: priv/plts
          key: >-
            ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{
            hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}-v1
        if: ${{ matrix.dialyzer }}

      - name: Create PLTs
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
        if: ${{ matrix.dialyzer && steps.plt-cache.outputs.cache-hit != 'true' }}

      - name: Run dialyzer
        run: mix dialyzer --no-check --halt-exit-status
        if: ${{ matrix.dialyzer && steps.plt-cache.outputs.cache-hit != 'true' }}
